<?xml version="1.0" encoding="utf-8"?>
<items xmlns="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1
     http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1.xsd ">

    <note language="de">
        <title>Dynamische Passw√∂rter</title>
        <xhtml:div>
            <p>
            </p>
            <p>
            </p>
        </xhtml:div>
    </note>

    <note language="en">
        <title>Dynamic password retrieval</title>
        <p> Instead of using a hard-wired password in your configuration you can use a script. This
            script has to return the password by printing it to stdout.
            If the exit code of that
            script is not 0 (zero) after execution then the original parameter value is used as a
            password.
            <indexterm index="Password, dynamic retrieval" display="false"></indexterm>
            The password script must not
            write any other output to stdout except for the
            password.
        </p>
        <p>
            Sample Dynamic Password Script:
        </p>
        <p>
            <codeexample os="windows">
            <title language="en">Get the password from a script</title>
                <embeddedExample type="shell" os="win">
    @echo sos
                </embeddedExample>
                <embeddedExample type="shell" os="unix">
                    echo sos
                </embeddedExample>
            </codeexample>
        </p>
        <p> You include this script by just setting it as the value for the password parameter.
        Embedded into backticks "`".
        The
            value of the password-parameter is interpreted as the name of
            a script which have to be
            executed in order to get the actual value for the password:
        </p>
        <p>
            <codeexample os="windows">
                <embeddedExample type="shell" os="win">
                    password = `getpassword.cmd`
                </embeddedExample>
                <embeddedExample type="shell" os="unix">
                    password = `./getpassword.bsh`
                </embeddedExample>
            </codeexample>
        </p>
        <p>
            If the exit code of the script is 0 (zero) then its output to stdout is interpreted as the value for the
            password. If the exit code of that script is
            not 0 then the original parameter value is
            used as a password. For security concerns the script output will not get logged -
            neither for stdout nor
            for stderr.
        </p>
        <!--
        <p>As an Example of "how to use it" we will show how to send files by FTP authenticated with a
            Dynamic Password
        </p>
        <p> The profile of the configuration file ftp_settings.ini: </p>
        <p>
            <codeexample>
                <embeddedExample>
                    ...
                    [ftp_send_dyn]
                    protocol = ftp
                    host = 8of9.sos
                    user = sos
                    file_spec = .*
                    ; dynamic password
                    password = `.\getpassword.cmd`
                    local_dir = outbound/
                    remote_dir = /inbound/
                    ...
                </embeddedExample>
            </codeexample>
        </p>
            <p> Dynamic Password Scripts can be used alternatively to the parameter "password" for the
            protocols FTP, SFTP and FTPS. The parameter "jump_password" for the Jump Host does NOT
            support Dynamic Password Scripts. The path of the Dynamic Password Script is always
            relative to your local host. </p>
        -->
    </note>
</items>