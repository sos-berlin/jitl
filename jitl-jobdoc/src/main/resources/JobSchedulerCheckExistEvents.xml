<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id$ -->
<?xml-stylesheet type="text/xsl" href="scheduler_job_documentation_v1.1.xsl"?>
<description
	xmlns="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1"
	xmlns:xhtml="http://www.w3.org/1999/xhtml"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1     http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1.xsd">
	<job name="JobSchedulerCheckExistEvents"
		title="Check if events exist" order="yes" tasks="1">
		<script language="java"
			java_class="com.sos.jitl.eventing.checkevents.JobSchedulerCheckEventsJSAdapterClass" />
	</job>
	<releases>
		<release id="1.0" created="2013-11-11" modified="2015-06-02">
			<title>Version 1.0</title>
			<author name="Uwe Risse" email="uwe.risse@sos-berlin.com" />
			<note language="de">
				<div xmlns="http://www.w3.org/1999/xhtml">Initiale Auslieferung</div>
			</note>
			<note language="en">
				<div xmlns="http://www.w3.org/1999/xhtml">Initial Release</div>
			</note>
		</release>
	</releases>
	<resources>



	</resources>
	<configuration>
		<params id="job_parameter">
			<param name="event_class" required="false">

				<note language="de">
					<title>EventClassName</title>
					<xhtml:div>
						<p>Wenn der Paramater event_condition angegeben ist, kann mit
							dieser Einstellung eine event_class für alle verwendetet Events
							angegeben werden.
						</p>
						<p>Beispiel</p>
						<p>Ohne event_class Parameter</p>
						<p>class_a.event_1 and not (class_a.event2 or class_a.event3) </p>
						<p>Mit event_class Parameter</p>
						<p>event_class=class_a</p>
						<p>event_1 and not (event2 or event3) </p>
						<p>Wenn der Parameter event_condition nicht angegeben ist, wird
							der Wert von event_class als Filter für die Event-Suche
							verwendet.
						</p>
					</xhtml:div>
				</note>
				<note language="en">
					<title>EventClassName</title>
					<xhtml:div>
						<p>When the paramater event_condition is specified, the
							event_class parameter can be used to set the event class for all
							used events.
						</p>
						<p>Example</p>
						<p>Without event_class parameter</p>
						<p>class_a.event_1 and not (class_a.event2 or class_a.event3) </p>
						<p>With event_class parameter</p>
						<p>event_class=class_a</p>
						<p>event_1 and not (event2 or event3) </p>
						<p>When the parameter event_condition is not set, the value of
							event_class is used in the filter for the event search.
						</p>
					</xhtml:div>
				</note>
			</param>
			<param name="remote_scheduler_host" required="false">
				<note language="de">
					<title>RemoteSchedulerhost Host-Name</title>
					<xhtml:div>
						<p>Keine Bedeutung, wenn der Paramater event_condition angegeben
							ist
						</p>
						<p>Wenn der Parameter event_condition nicht angegeben ist, wird
							der Wert von remote_scheduler_host als Filter für die Event-Suche
							verwendet. Das Ergebnis ist true, wenn es einen Event gibt, der
							allen angegebenen Parametern entspricht.
						</p>
					</xhtml:div>
				</note>
				<note language="en">
					<title>RemoteSchedulerhost Host-Name</title>
					<xhtml:div>
						<p>No function when the parameter event_condition is set</p>
						<p>When the parameter event_condition is not set, the value of
							remote_scheduler_host is used in the filter for the event search.
							The check is true if there is an event with all given parameters
						</p>
					</xhtml:div>
				</note>
			</param>
			<param name="remote_scheduler_port" required="false">
				<note language="de">
					<title>RemoteSchedulerPort Port-Nummer</title>
					<xhtml:div>
						<p>Keine Bedeutung, wenn der Paramater event_condition angegeben
							ist
						</p>
						<p>Wenn der Parameter event_condition nicht angegeben ist, wird
							der Wert von remote_scheduler_port als Filter für die Event-Suche
							verwendet. Das Ergebnis ist true, wenn es einen Event gibt, der
							allen angegebenen Parametern entspricht.
						</p>
					</xhtml:div>
				</note>
				<note language="en">
					<title>RemoteSchedulerPort Port-Nummer</title>
					<xhtml:div>
						<p>No function when the parameter event_condition is set</p>
						<p>When the parameter event_condition is not set, the value of
							remote_scheduler_port is used in the filter for the event search.
							The check is true if there is an event with all given parameters
						</p>
					</xhtml:div>
				</note>
			</param>

			<param name="configuration_file" required="false">
				<note language="de">
					<title>ConfigurationFileName</title>
					<xhtml:div>
						<p>Der Name der Hibernate Konfigurationsdatei. Default ist
							$SCHEDULER_DATA/config/reporting.hibernate.cfg.xml
						</p>
					</xhtml:div>
				</note>
				<note language="en">
					<title>ConfigurationFileName</title>
					<p>The name of the hibernate configuration file. Default is
						$SCHEDULER_DATA/config/reporting.hibernate.cfg.xml
					</p>
				</note>
			</param>

			<param name="event_condition" required="false">
				<note language="de">
					<title>EventCondition</title>
					<xhtml:div>
						<p>Es kann eine Bedingung für Prüfung nach Events angegeben
							werden. Dabei sind vollständige boolsche Ausdrücke möglich.
						</p>
						<p>Beispiel: class_a.event_1:99 and not (class_b.event2 or
							class_b.event3)
						</p>

						Das Event wird mit class.id:exit_code gekennzeichnet (exit_code
						kann fehlen). Fehlt die class, dann wird nur nach Events mit der
						angegeben id gesucht. Möglichercherweise sind diese dann nicht
						mehr
						eindeutig.
						Eine event_class für alle Events kann mit dem
						Parameter event_class angegeben werden.

					</xhtml:div>
				</note>
				<note language="en">
					<title>EventCondition</title>
					<p>The condition for the check of events
						Example: class_a.event_1:99
						and not (class_b.event2 or class_b.event3)
					</p>

					The event will be identified by class.id:exit_code (exit_code is
					not mandatory). if class is missing, events with the given id are
					valid. Probably these are not unique any more. A event_class for
					all used events can be specified with the parameter event_class.
				</note>
			</param>

			<param name="event_exit_code" required="false">
				<note language="de">
					<title>ExitCode</title>
					<xhtml:div>
						<p>Keine Bedeutung, wenn der Paramater event_condition angegeben
							ist
						</p>
						<p>Wenn der Parameter event_condition nicht angegeben ist, wird
							der Wert von event_exit_code als Filter für die Event-Suche
							verwendet. Das Ergebnis ist true, wenn es einen Event gibt, der
							allen angegebenen Parametern entspricht.
						</p>
					</xhtml:div>
				</note>
				<note language="en">
					<title>ExitCode</title>
					<xhtml:div>
						<p>No function when the parameter event_condition is set</p>
						<p>When the parameter event_condition is not set, the value of
							event_exit_code is used in the filter for the event search. The
							check is true if there is an event with all given parameters
						</p>
					</xhtml:div>
				</note>
			</param>


			<param name="event_scheduler_id" required="false">
				<note language="de">
					<title>EventSchedulerId</title>
					<xhtml:div>
						<p>Keine Bedeutung, wenn der Paramater event_condition angegeben
							ist
						</p>
						<p>Wenn der Parameter event_condition nicht angegeben ist, wird
							der Wert von event_scheduler_id als Filter für die Event-Suche
							verwendet. Das Ergebnis ist true, wenn es einen Event gibt, der
							allen angegebenen Parametern entspricht.
						</p>
					</xhtml:div>
				</note>
				<note language="en">
					<title>EventSchedulerId</title>
					<xhtml:div>
						<p>No function when the parameter event_condition is set</p>
						<p>When the parameter event_condition is not set, the value of
							event_scheduler_id is used in the filter for the event search.
							The check is true if there is an event with all given parameters
						</p>
					</xhtml:div>
				</note>
			</param>

			<param name="event_job" required="false">
				<note language="de">
					<title>EventId</title>
					<xhtml:div>
						<p>Keine Bedeutung, wenn der Paramater event_condition angegeben
							ist
						</p>
						<p>Wenn der Parameter event_condition nicht angegeben ist, wird
							der Wert von event_id als Filter für die Event-Suche
							verwendet.
							Das Ergebnis ist true, wenn es einen Event gibt, der
							allen angegebenen Parametern entspricht.
						</p>
					</xhtml:div>
				</note>
				<note language="en">
					<title>EventId</title>
					<xhtml:div>
						<p>No function when the parameter event_condition is set</p>
						<p>When the parameter event_condition is not set, the value of
							event_id is used in the filter for the event search. The check
							is true if there is an event with all given parameters
						</p>
					</xhtml:div>
				</note>
			</param>

			<param name="event_job_chain" required="false">
				<note language="de">
					<title>EventJobChain</title>
					<xhtml:div>
						<p>Keine Bedeutung, wenn der Paramater event_condition angegeben
							ist.
						</p>
						<p>Wenn der Parameter event_condition nicht angegeben ist, wird
							der Wert von event_job_chain als Filter für die Event-Suche
							verwendet. Das Ergebnis ist true, wenn es einen Event gibt, der
							allen angegebenen Parametern entspricht.
						</p>
					</xhtml:div>
				</note>
				<note language="en">
					<title>EventJobChain</title>
					<xhtml:div>
						<p>No function when the parameter event_condition is set</p>
						<p>When the parameter event_condition is not set, the value of
							event_job_chain is used in the filter for the event search. The
							check is true if there is an event with all given parameters
						</p>
					</xhtml:div>
				</note>
			</param>

			<param name="event_order_id" required="false">
				<note language="de">
					<title>EventOrderId</title>
					<xhtml:div>
						<p>Keine Bedeutung, wenn der Paramater event_condition angegeben
							ist
						</p>
						<p>Wenn der Parameter event_condition nicht angegeben ist, wird
							der Wert von event_order_id als Filter für die Event-Suche
							verwendet. Das Ergebnis ist true, wenn es einen Event gibt, der
							allen angegebenen Parametern entspricht.
						</p>
					</xhtml:div>
				</note>
				<note language="en">
					<title>EventOrderId</title>
					<xhtml:div>
						<p>No function when the parameter event_condition is set</p>
						<p>When the parameter event_condition is not set, the value of
							event_order_id is used in the filter for the event search. The
							check is true if there is an event with all given parameters
						</p>
					</xhtml:div>
				</note>
			</param>

			<param name="handle_existing_as" default_value="succes" required="false">
				<note language="de">
					<xhtml:div>
						<p>
							Jobs des JobSchedulers können Events erzeugen, 
							die von einer JobScheduler Supervisor Instanz verarbeitet werden. 
							Dieser Job kann prüfen ob bestimmte Events existieren. 
							Dazu verarbeitet er Aufträge, die eine Spezifikation der Events enthalten.
							Je nach dem, ob die Events existieren oder nicht, wird der Auftrag in den
							<code>next_state</code>
							oder in den
							<code>error_state</code>
							gesetzt.
              <br />
              <br />
							Der Parameter <code>handle_existing_as="error|success"</code> bzw.
							<code>handle_not_existing_as="error|success"</code> bestimmt das Verhalten des
							Jobs bei Existenz bzw. Nichtexistenz der spezifizierten Events.
							Default ist <code>handle_existing_as="success"</code>.
						</p>
					</xhtml:div>
				</note>
				<note language="en">
					<div xmlns="http://www.w3.org/1999/xhtml">
						<p>
							During job execution in a JobScheduler instance events could be
							created
							that should be processed by a JobScheduler Supervisor
							Instance. 
							This job checks if certain events exists. 
							The job processes orders which are configured with an event specification.
							Depending on whether these events exist or
							not the order will be put into the
							<code>next_state</code>
							or into the
							<code>error_state</code>
							.
              <br />
              <br />
							The <code>handle_existing_as="error|succes"</code> and
							<code>handle_not_existing_as="error|succes"</code> parameters define the behaviour of
							the job according to whether or not the specified events exists. 
							The default is <code>handle_existing_as="succes"</code>.
						</p>
					</div>
				</note>
			</param>
			<param name="handle_not_existing_as" required="false">
				<note language="de">
					<xhtml:div>
						<p>
							<code>event_condition=c1.e1</code>
							ist das gleiche
							<code>event_class=c1</code>
							and 
							<code>event_id=eq</code>
							Allerdings kann 
							<code>c1.e1</code> 
							and 
							<code>c2.e2</code> 
							nicht mit den Filterparametern ausgedrückt werden.
							<br />
							<code>event_condition:</code> 
							Wertet alle Events unabhängig von der schedulerId aus. 
						</p>
					</xhtml:div>
				</note>
				<note language="en">
					<div xmlns="http://www.w3.org/1999/xhtml">
						<p>
							<code>event_condition=c1.e1</code>
							is the same as
							<code>event_class=c1</code>
							and 
							<code>event_id=eq</code>
							However, 
							<code>c1.e1</code> 
							and 
							<code>c2.e2</code> 
							cannot be expressed with the filter parameters.
							<br />
							<code>event_condition:</code> 
							Evaluates all Events regardless of the schedulerId. 
						</p>
							The <code>handle_existing_as="error|succes"</code> and
							<code>handle_not_existing_as="error|succes"</code> parameters define the behaviour of
							the job according to whether or not the specified events exists. 
					<!--The default is <code>handle_not_existing_as="succes"</code>.-->
					</div>
				</note>
			</param>

		</params>

	</configuration>
	<documentation language="de">
		<div xmlns="http://www.w3.org/1999/xhtml">
			Jobs des JobSchedulers können Events erzeugen, die von einer
			JobScheduler
			Supervisor Instanz verarbeitet werden. Dieser Job kann
			prüfen ob bestimmte
			Events existieren. Dazu verarbeitet er Aufträge,
			die eine
			Spezifikation der Events enthalten.
			Je nach dem, ob die Events
			existieren oder nicht, wird
			der Auftrag in den
			<code>next_state</code>
			oder in den
			<code>error_state</code>
			gesetzt.

			Der Parameter handle_existing_as="error|success" bzw.
			handle_not_existing_as="error|success" bestimmt das Verhalten des
			Jobs bei Existenz bzw. Nichtexistenz der spezifizierten Events.
			Default ist handle_existing_as="success"
		</div>
	</documentation>
	<documentation language="en">
		<div xmlns="http://www.w3.org/1999/xhtml">
			During job execution in a JobScheduler instance events could be
			created
			that should be processed by a JobScheduler Supervisor
			Instance. This
			job
			checks if certain events exists. The job processes
			orders which are
			configured
			with an event specification. Depending on
			whether these events
			exist or
			not the
			order will be put into the
			<code>next_state</code>
			or into the
			<code>error_state</code>
			.

			The parameter handle_existing_as="error|success" and
			handle_not_existing_as="error|succes" defines the behaviour of the
			job in case of existing or not existing of the specified events. The
			default is handle_existing_as="success"
		</div>
	</documentation>
</description>

